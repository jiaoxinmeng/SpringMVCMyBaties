<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans
     	  http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       	  http://www.springframework.org/schema/context 
       	  http://www.springframework.org/schema/context/spring-context-3.2.xsd
      	  http://www.springframework.org/schema/aop
	      http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	      http://www.springframework.org/schema/tx
	      http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		  http://www.springframework.org/schema/jdbc 
		  http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd 
		  http://www.springframework.org/schema/mvc      
          http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd  
		  ">

	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="WEB-INF/config/jdbc.properties" />

	<!-- 用注解方式注入bean -->
	<context:annotation-config />

	<!-- 扫描包 -->
	<context:component-scan base-package="com.xhay1122.dao;com.xhay1122.service.*;" />

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射,解决@ResponseBody乱码问题, 需要在annotation-driven之前,否则乱码问题同样无法解决 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 向 spring 容器中注册 DefaultAnnotationHandlerMapping。 向 spring 容器中注册 AnnotationMethodHandlerAdapter。 
		配置一些 messageconverter。 解决了 @Controller 注解的使用前提配置，即 HandlerMapping 能够知道谁来处理请求。 -->
	<mvc:annotation-driven />
	<context:component-scan base-package="com.xhay1122.controller.*" />

	<!--创建jdbc数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
	</bean>

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/xhay1122/mapper/*/*.xml" />  
        <!-- <property name="configLocation" value="WEB-INF/config/mybatis-configuration.xml" /> -->
	</bean>

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xhay1122.dao.*" />
	</bean>
	
	<!-- 可通过注解控制事务 -->
	<tx:annotation-driven />

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
</beans>
